% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimizer.R
\name{optimizer_ignite}
\alias{optimizer_ignite}
\title{Abstract Base Class for LibTorch Optimizers}
\usage{
optimizer_ignite(
  name = NULL,
  inherit = getFromNamespace("Optimizer", "torch"),
  ...,
  private = NULL,
  active = NULL,
  parent_env = parent.frame()
)
}
\arguments{
\item{name}{(optional) name of the optimizer}

\item{inherit}{(optional) you can inherit from other optimizers to re-use
some methods.}

\item{...}{Pass any number of fields or methods. You should at least define
the \code{initialize} and \code{step} methods. See the examples section.}

\item{private}{(optional) a list of private methods for the optimizer.}

\item{active}{(optional) a list of active methods for the optimizer.}

\item{parent_env}{used to capture the right environment to define the class.
The default is fine for most situations.}
}
\description{
Abstract base class for creating optimizers implemented in C++.
It is assumed that \code{self$ptr} is a pointer to the optimizer.
Failing to implement this contract will lead to undefined behavior and possibly segfaults when
this expected, e.g. by the \code{\link{Igniter}} class.
}
